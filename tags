!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<A-left>	keys.vim	/^nnoremap <A-left> :tabp <CR>$/;"	m
<A-right>	keys.vim	/^nnoremap <A-right> :tabn <CR>$/;"	m
<A-up>	keys.vim	/^nnoremap <A-up> :tabl <CR>$/;"	m
<C-D>	general.vim	/^nnoremap <C-D> :bdelete %<CR>$/;"	m
<C-N>	general.vim	/^nnoremap <C-N> :bnext<CR>$/;"	m
<C-P>	general.vim	/^nnoremap <C-P> :bprev<CR>$/;"	m
<C-a>	keys.vim	/^nnoremap <C-a> :e $HOME\/.config\/nvim\/config\/plugins\/index.vim <CR>$/;"	m
<C-d>	keys.vim	/^nnoremap <C-d> :bd %<CR>$/;"	m
<C-d>	plugins/core/coc.vim	/^nmap <silent> <C-d> <Plug>(coc-range-select)$/;"	m
<C-h>	keys.vim	/^nnoremap <C-h> :bprevious <CR>$/;"	m
<C-l>	keys.vim	/^nnoremap <C-l> :bnext <CR>$/;"	m
<C-q>	keys.vim	/^nnoremap <C-q> :NERDTree <CR>$/;"	m
<Leader><Space>	keys.vim	/^map <Leader><Space> :noh<CR>;$/;"	m
<S-TAB>	plugins/core/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	plugins/core/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<c-space>	plugins/core/coc.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	plugins/core/coc.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<leader>a	keys.vim	/^nmap <silent> <leader>a :<C-u>set operatorfunc=<SID>cocActionsOpenFromSelected<CR>g@$/;"	m
<leader>a	plugins/core/coc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	plugins/core/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>f	plugins/core/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>qf	plugins/core/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	plugins/core/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<space>a	plugins/core/coc.vim	/^nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	plugins/core/coc.vim	/^nnoremap <silent> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	plugins/core/coc.vim	/^nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	plugins/core/coc.vim	/^nnoremap <silent> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	plugins/core/coc.vim	/^nnoremap <silent> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	plugins/core/coc.vim	/^nnoremap <silent> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	plugins/core/coc.vim	/^nnoremap <silent> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	plugins/core/coc.vim	/^nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Fold	plugins/core/coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	plugins/core/coc.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
K	plugins/core/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
NERDTreeDirArrows	plugins/core/NERDTree.vim	/^let NERDTreeDirArrows = 1$/;"	v
NERDTreeShowHidden	plugins/core/NERDTree.vim	/^let NERDTreeShowHidden = 1$/;"	v
OR	plugins/core/coc.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
[g	plugins/core/coc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	plugins/core/coc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
af	plugins/core/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
check_back_space	plugins/core/coc.vim	/^function! s:check_back_space() abort$/;"	f
cocActionsOpenFromSelected	keys.vim	/^function! s:cocActionsOpenFromSelected(type) abort$/;"	f
g:Powerline_sybols	plugins/core/airline.vim	/^let g:Powerline_sybols = 'unicode'$/;"	v
g:airline#extensions#tabline#buffers_label	plugins/core/airline.vim	/^let g:airline#extensions#tabline#buffers_label = 'BUFFERS'$/;"	v
g:airline#extensions#tabline#enabled	plugins/core/airline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#show_tab_nr	plugins/core/airline.vim	/^let g:airline#extensions#tabline#show_tab_nr = 1$/;"	v
g:airline#extensions#tabline#show_tab_type	plugins/core/airline.vim	/^let g:airline#extensions#tabline#show_tab_type = 1$/;"	v
g:airline#extensions#tabline#tab_nr_type	plugins/core/airline.vim	/^let g:airline#extensions#tabline#tab_nr_type= 2$/;"	v
g:airline#extensions#tabline#tabs_label	plugins/core/airline.vim	/^let g:airline#extensions#tabline#tabs_label = 'TABS'$/;"	v
g:airline_left_alt_sep	plugins/core/airline.vim	/^let g:airline_left_alt_sep = ''$/;"	v
g:airline_left_sep	plugins/core/airline.vim	/^let g:airline_left_sep = ''$/;"	v
g:airline_powerline_fonts	plugins/core/airline.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_right_alt_sep	plugins/core/airline.vim	/^let g:airline_right_alt_sep = ''$/;"	v
g:airline_right_sep	plugins/core/airline.vim	/^let g:airline_right_sep = ''$/;"	v
g:airline_theme	general.vim	/^let g:airline_theme='deep_space'$/;"	v
g:python3_host_prog	general.vim	/^let g:python3_host_prog='\/home\/jrmmendes\/.neovim-venvs\/neovim3\/bin\/python'$/;"	v
g:startify_custom_header	plugins/core/startify.vim	/^let g:startify_custom_header = [$/;"	v
g:user_emmet_install_global	plugins/core/emmet.vim	/^let g:user_emmet_install_global = 0$/;"	v
g:user_emmet_leader_key	plugins/core/emmet.vim	/^let g:user_emmet_leader_key='<C-e>'$/;"	v
g:user_emmet_settings	plugins/core/emmet.vim	/^let g:user_emmet_settings = {$/;"	v
gd	plugins/core/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	plugins/core/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	plugins/core/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	plugins/core/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
if	plugins/core/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
mygroup	plugins/core/coc.vim	/^augroup mygroup$/;"	a
show_documentation	plugins/core/coc.vim	/^function! s:show_documentation()$/;"	f
